{"version":3,"file":"imageboarddraganddrop.min.js","sources":["../src/imageboarddraganddrop.js"],"sourcesContent":["/**\n * Unilabel type imageboard\n *\n * @author      Andreas Schenkel\n * @copyright   Andreas Schenkel {@link https://github.com/andreasschenkel}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = () => {\n    // Store some data about the selected image that is moved.\n    var selectedImage = [];\n    selectedImage.number = null;\n    selectedImage.src = '';\n    // ItemToMove is the div that the selected image is inside. We do NOT move the image we move the div.\n    selectedImage.itemToMove = null;\n    // ToDo: Add documentation about xoffset?\n    selectedImage.eventlayerX = 0;\n    selectedImage.eventlayerY = 0;\n    selectedImage.width = null;\n    selectedImage.height = null;\n\n    // Store the data about the canvas/background.\n    var canvas = null;\n    var canvaswidth = 950;\n    var canvasheight = 400;\n    registerDnDListener();\n    var img = new Image();\n\n    /**\n     *\n     */\n    function registerDnDListener() {\n        setTimeout(function() {\n            canvas = document.getElementById(\"unilabel-imageboard-background-area\");\n            canvas.addEventListener(\"dragstart\", dragStart, false);\n            canvas.addEventListener(\"drag\", drag, false);\n            canvas.addEventListener(\"dragend\", dragEnd, false);\n        }, 1000);\n    }\n\n    /**\n     * ToDo: height auto needs different code\n     * @param {event} event\n     */\n    function dragStart(event) {\n        console.log(\"dragStart\", event);\n        if (event && event.target && event.target.classList.contains('image')) {\n            // Image was selected so we have to store the information about this image.\n            selectedImage.src = event.target.src;\n            selectedImage.number = event.target.getAttribute('id').split('unilabel-imageboard-imageid_')[1];\n            selectedImage.width = event.target.style.width.split('px')[0];\n            selectedImage.height = event.target.style.height.split('px')[0];\n            selectedImage.itemToMove = document.getElementById('unilabel_imageboard_imagediv_' + selectedImage.number);\n            selectedImage.eventlayerX = event.layerX;\n            selectedImage.eventlayerY = event.layerY;\n\n            console.log('selectedImage', selectedImage);\n\n            // Now we create a div and place the image that has to be moved in order to add it to he event\n            // by using event.dataTransfer.setDragImage\n            var div = document.createElement(\"div\");\n            div.id = \"iamdragged\";\n            div.style.width = selectedImage.width + \"px\";\n            div.style.height = selectedImage.height + \"px\";\n            document.body.appendChild(div);\n\n            img.src = selectedImage.src;\n            img.style.border = \"0px solid #ff0000\";\n            img.width = selectedImage.width;\n            img.height = selectedImage.height;\n\n            document.getElementById('iamdragged').appendChild(img);\n            event.dataTransfer.setDragImage(div, event.layerX + 0, event.layerY + 0);\n        }\n    }\n\n    /**\n     *\n     */\n    function drag() {\n        // console.log(\"drag\", event);\n        // Maybe we can do something during dragging but at the moment I do not have access to the upper left\n        // corner of the dragged image.\n    }\n\n    /**\n     *\n     * @param {event} event\n     */\n    function dragEnd(event) {\n        console.log(\"dragEnd\", event);\n        if (selectedImage.number !== null ) {\n            var xposition = calculateXposition(event);\n            var yposition = calculateYposition(event);\n            selectedImage.itemToMove.style.left = xposition + \"px\";\n            selectedImage.itemToMove.style.top = yposition + \"px\";\n            // Change the inputfield\n            const inputPositionX = document.getElementById('id_unilabeltype_imageboard_xposition_' + (selectedImage.number));\n            const inputPositionY = document.getElementById('id_unilabeltype_imageboard_yposition_' + (selectedImage.number));\n            inputPositionX.value = xposition;\n            inputPositionY.value = yposition;\n            // Reset saved image data\n            selectedImage.number = null;\n            document.getElementById('iamdragged').remove();\n        }\n    }\n\n    /**\n     *\n     * @param {event} event\n     * @returns {number}\n     */\n    function calculateXposition(event) {\n        var canvasboundings = canvas.getBoundingClientRect();\n        var xposition = event.clientX - canvasboundings.left - selectedImage.eventlayerX - 1;\n        if (xposition < 0) {\n            xposition = 0;\n        }\n        if (xposition >= canvaswidth - selectedImage.width) {\n            xposition = canvaswidth - selectedImage.width;\n        }\n        return Math.round(xposition);\n    }\n\n    /**\n     *\n     * @param {event} event\n     * @returns {number}\n     */\n    function calculateYposition(event) {\n        var canvasboundings = canvas.getBoundingClientRect();\n        var yposition = event.clientY - canvasboundings.top - selectedImage.eventlayerY - 1;\n        if (yposition < 0) {\n            yposition = 0;\n        }\n        if (yposition >= canvasheight - selectedImage.height) {\n            yposition = canvasheight - selectedImage.height;\n        }\n        return Math.round(yposition);\n    }\n};\n"],"names":["selectedImage","number","src","itemToMove","eventlayerX","eventlayerY","width","height","canvas","setTimeout","document","getElementById","addEventListener","dragStart","drag","dragEnd","img","Image","event","console","log","target","classList","contains","getAttribute","split","style","layerX","layerY","div","createElement","id","body","appendChild","border","dataTransfer","setDragImage","xposition","canvasboundings","getBoundingClientRect","clientX","left","Math","round","calculateXposition","yposition","clientY","top","calculateYposition","inputPositionX","inputPositionY","value","remove"],"mappings":"kLAQoB,SAEZA,cAAgB,GACpBA,cAAcC,OAAS,KACvBD,cAAcE,IAAM,GAEpBF,cAAcG,WAAa,KAE3BH,cAAcI,YAAc,EAC5BJ,cAAcK,YAAc,EAC5BL,cAAcM,MAAQ,KACtBN,cAAcO,OAAS,SAGnBC,OAAS,KAUTC,YAAW,YACPD,OAASE,SAASC,eAAe,wCAC1BC,iBAAiB,YAAaC,WAAW,GAChDL,OAAOI,iBAAiB,OAAQE,MAAM,GACtCN,OAAOI,iBAAiB,UAAWG,SAAS,KAC7C,SAXHC,IAAM,IAAIC,eAkBLJ,UAAUK,UACfC,QAAQC,IAAI,YAAaF,OACrBA,OAASA,MAAMG,QAAUH,MAAMG,OAAOC,UAAUC,SAAS,SAAU,CAEnEvB,cAAcE,IAAMgB,MAAMG,OAAOnB,IACjCF,cAAcC,OAASiB,MAAMG,OAAOG,aAAa,MAAMC,MAAM,gCAAgC,GAC7FzB,cAAcM,MAAQY,MAAMG,OAAOK,MAAMpB,MAAMmB,MAAM,MAAM,GAC3DzB,cAAcO,OAASW,MAAMG,OAAOK,MAAMnB,OAAOkB,MAAM,MAAM,GAC7DzB,cAAcG,WAAaO,SAASC,eAAe,gCAAkCX,cAAcC,QACnGD,cAAcI,YAAcc,MAAMS,OAClC3B,cAAcK,YAAca,MAAMU,OAElCT,QAAQC,IAAI,gBAAiBpB,mBAIzB6B,IAAMnB,SAASoB,cAAc,OACjCD,IAAIE,GAAK,aACTF,IAAIH,MAAMpB,MAAQN,cAAcM,MAAQ,KACxCuB,IAAIH,MAAMnB,OAASP,cAAcO,OAAS,KAC1CG,SAASsB,KAAKC,YAAYJ,KAE1Bb,IAAId,IAAMF,cAAcE,IACxBc,IAAIU,MAAMQ,OAAS,oBACnBlB,IAAIV,MAAQN,cAAcM,MAC1BU,IAAIT,OAASP,cAAcO,OAE3BG,SAASC,eAAe,cAAcsB,YAAYjB,KAClDE,MAAMiB,aAAaC,aAAaP,IAAKX,MAAMS,OAAS,EAAGT,MAAMU,OAAS,aAOrEd,iBAUAC,QAAQG,UACbC,QAAQC,IAAI,UAAWF,OACM,OAAzBlB,cAAcC,OAAkB,KAC5BoC,mBAoBgBnB,WACpBoB,gBAAkB9B,OAAO+B,wBACzBF,UAAYnB,MAAMsB,QAAUF,gBAAgBG,KAAOzC,cAAcI,YAAc,EAC/EiC,UAAY,IACZA,UAAY,GAEZA,WA/FU,IA+FiBrC,cAAcM,QACzC+B,UAhGU,IAgGgBrC,cAAcM,cAErCoC,KAAKC,MAAMN,WA7BEO,CAAmB1B,OAC/B2B,mBAoCgB3B,WACpBoB,gBAAkB9B,OAAO+B,wBACzBM,UAAY3B,MAAM4B,QAAUR,gBAAgBS,IAAM/C,cAAcK,YAAc,EAC9EwC,UAAY,IACZA,UAAY,GAEZA,WA/GW,IA+GiB7C,cAAcO,SAC1CsC,UAhHW,IAgHgB7C,cAAcO,eAEtCmC,KAAKC,MAAME,WA7CEG,CAAmB9B,OACnClB,cAAcG,WAAWuB,MAAMe,KAAOJ,UAAY,KAClDrC,cAAcG,WAAWuB,MAAMqB,IAAMF,UAAY,WAE3CI,eAAiBvC,SAASC,eAAe,wCAA2CX,cAAcC,QAClGiD,eAAiBxC,SAASC,eAAe,wCAA2CX,cAAcC,QACxGgD,eAAeE,MAAQd,UACvBa,eAAeC,MAAQN,UAEvB7C,cAAcC,OAAS,KACvBS,SAASC,eAAe,cAAcyC"}